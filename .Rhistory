subtitle = "For immigrants arrived in Switzerland in 1998, share by nationality who left the country by year of residence")
#g1b + facet_wrap(~continent)
g1b + facet_wrap(~region)
pop
pop %>% head(20)
pop %>% head(20) %>% select(Citizenship)
pop %>% head(20) %>% select(Citizenship) %>% unlist(use.names = F)
pop <- data %>% filter(year == levels(year)[nlevels(year)]) %>% select(Citizenship, pop) %>% arrange(desc(pop))
pop.sub <- pop %>% head(20) %>% select(Citizenship) %>% unlist(use.names = F)
g1 <- ggplot(data = data %>% filter(Citizenship %in% pop.sub), aes(x = year, y= value, group = Citizenship, colour = continent)) +
geom_line(aes(size = pop)) + swi_theme() + scale_size_continuous(range = c(0.001, 2))
g1
g1b <- g1 + geom_text(data = data %>% filter(year == levels(year)[nlevels(year)]), aes(label = Citizenship), hjust = 1, vjust = 0, check_overlap = T, nudge_y = 0.1) +
scale_colour_manual(values = swi_rpal) + ylab("%") +
labs(title = "How many migrants leave Switzerland over time?",
subtitle = "For immigrants arrived in Switzerland in 1998, share by nationality who left the country by year of residence")
g1b
g1b <- g1 + geom_text(data = data %>% filter(year == levels(year)[nlevels(year)]), aes(label = Citizenship), hjust = 1, vjust = 0, check_overlap = T, nudge_y = 0.01) +
scale_colour_manual(values = swi_rpal) + ylab("%") +
labs(title = "How many migrants leave Switzerland over time?",
subtitle = "For immigrants arrived in Switzerland in 1998, share by nationality who left the country by year of residence")
#g1b + facet_wrap(~continent)
g1b + facet_wrap(~region)
g1b
data %>% filter(Citizenship %in% pop.sub)
g1 <- ggplot(data = data %>% filter(Citizenship %in% pop.sub), aes(x = year, y= value, group = Citizenship, colour = continent)) +
geom_line(aes(size = pop)) + swi_theme() + scale_size_continuous(range = c(0.001, 2))
g1
pop <- data %>% filter(year == levels(year)[nlevels(year)]) %>% select(Citizenship, pop) %>% arrange(desc(pop))
pop.sub <- pop %>% head(20) %>% select(Citizenship) %>% unlist(use.names = F)
dd <- data %>% filter(Citizenship %in% pop.sub)
g1 <- ggplot(data = dd, aes(x = year, y= value, group = Citizenship, colour = continent)) +
geom_line(aes(size = pop)) + swi_theme() + scale_size_continuous(range = c(0.001, 2))
g1b <- g1 + geom_text(data = dd %>% filter(year == levels(year)[nlevels(year)]), aes(label = Citizenship), hjust = 1, vjust = 0, check_overlap = T, nudge_y = 0.01) +
scale_colour_manual(values = swi_rpal) + ylab("%") +
labs(title = "How many migrants leave Switzerland over time?",
subtitle = "For immigrants arrived in Switzerland in 1998, share by nationality who left the country by year of residence")
g1b
g1b + facet_wrap(~region)
pop
g1b + facet_wrap(~continent)
g1b + facet_wrap(~region)
pop <- data %>% filter(year == levels(year)[nlevels(year)]) %>% select(Citizenship, pop) %>% arrange(desc(pop))
pop.sub <- pop %>% head(15) %>% select(Citizenship) %>% unlist(use.names = F)
dd <- data %>% filter(Citizenship %in% pop.sub)
g1 <- ggplot(data = dd, aes(x = year, y= value, group = Citizenship, colour = continent)) +
geom_line(aes(size = pop)) + swi_theme() + scale_size_continuous(range = c(0.001, 2))
g1b <- g1 + geom_text(data = dd %>% filter(year == levels(year)[nlevels(year)]), aes(label = Citizenship), hjust = 1, vjust = 0, check_overlap = T, nudge_y = 0.01) +
scale_colour_manual(values = swi_rpal) + ylab("%") +
labs(title = "How many migrants leave Switzerland over time?",
subtitle = "For immigrants arrived in Switzerland in 1998, share by nationality who left the country by year of residence")
#g1b + facet_wrap(~continent)
g1b + facet_wrap(~region)
Sys.setenv(http_proxy="http://nguyendu:t0ast3r!@proxy.media.int:8080")
Sys.setenv(https_proxy="https://nguyendu:t0ast3r!@proxy.media.int:8080")
Sys.setenv(http_proxy="http://nguyendu:t0ast3r!@proxy.media.int:8080")
Sys.setenv(https_proxy="https://nguyendu:t0ast3r!@proxy.media.int:8080")
install.packages("geofacet")
pop <- data %>% filter(year == levels(year)[nlevels(year)]) %>% select(Citizenship, pop) %>% arrange(desc(pop))
pop.sub <- pop %>% head(20) %>% select(Citizenship) %>% unlist(use.names = F)
dd <- data %>% filter(Citizenship %in% pop.sub)
g1 <- ggplot(data = dd, aes(x = year, y= value, group = Citizenship, colour = continent)) +
geom_line(aes(size = pop)) + swi_theme() + scale_size_continuous(range = c(0.001, 2))
g1b <- g1 + geom_text(data = dd %>% filter(year == levels(year)[nlevels(year)]), aes(label = Citizenship), hjust = 1, vjust = 0, check_overlap = T, nudge_y = 0.01) +
scale_colour_manual(values = swi_rpal) + ylab("%") +
labs(title = "How many migrants leave Switzerland over time?",
subtitle = "For immigrants arrived in Switzerland in 1998, share by nationality who left the country by year of residence")
#g1b + facet_wrap(~continent)
g1b + facet_wrap(~region)
g1b
g1b + facet_wrap(~region)
library(geofacet)
grid_design()
?grid_design()
grid_design(data.frame(code = letters))
letters
us_state_grid1
countrycode()
countrycode
?countrycode
g1b + facet_wrap(~region)
g1b + facet_wrap(~continent)
g1b + facet_wrap(~continent, ncol = 1)
op <- data %>% filter(year == levels(year)[nlevels(year)]) %>% select(Citizenship, pop) %>% arrange(desc(pop))
pop.sub <- pop %>% head(20) %>% select(Citizenship) %>% unlist(use.names = F)
dd <- data %>% filter(Citizenship %in% pop.sub)
g1 <- ggplot(data = dd, aes(x = year, y= value, group = Citizenship, colour = continent)) +
geom_line(aes(size = pop)) + swi_theme() + scale_size_continuous(range = c(0.001, 2))
g1b <- g1 + geom_text(data = dd %>% filter(year == levels(year)[nlevels(year)]), aes(label = Citizenship), hjust = 1, vjust = 0, check_overlap = T, nudge_y = 0.01) +
scale_colour_manual(values = swi_rpal) + ylab("%") +
labs(title = "How many migrants leave Switzerland over time?",
subtitle = "For immigrants arrived in Switzerland in 1998, share by nationality who left the country by year of residence")
g1b + facet_wrap(~continent, ncol = 1)
pop <- data %>% filter(year == levels(year)[nlevels(year)]) %>% select(Citizenship, pop) %>% arrange(desc(pop))
pop.sub <- pop %>% head(30) %>% select(Citizenship) %>% unlist(use.names = F)
dd <- data %>% filter(Citizenship %in% pop.sub)
g1 <- ggplot(data = dd, aes(x = year, y= value, group = Citizenship, colour = continent)) +
geom_line(aes(size = pop)) + swi_theme() + scale_size_continuous(range = c(0.001, 2))
g1b <- g1 + geom_text(data = dd %>% filter(year == levels(year)[nlevels(year)]), aes(label = Citizenship), hjust = 1, vjust = 0, check_overlap = T, nudge_y = 0.01) +
scale_colour_manual(values = swi_rpal) + ylab("%") +
labs(title = "How many migrants leave Switzerland over time?",
subtitle = "For immigrants arrived in Switzerland in 1998, share by nationality who left the country by year of residence")
#g1b + facet_wrap(~continent)
g1b + facet_wrap(~region)
g1b + facet_wrap(~continent)
g1b + facet_wrap(~continent, ncol = 1)
pop
pop <- data %>% filter(year == levels(year)[nlevels(year)]) %>% select(Citizenship, pop) %>% arrange(desc(pop))
pop.sub <- pop %>% head(20) %>% select(Citizenship) %>% unlist(use.names = F)
dd <- data %>% filter(Citizenship %in% pop.sub)
g1 <- ggplot(data = dd, aes(x = year, y= value, group = Citizenship, colour = continent)) +
geom_line(aes(size = pop)) + swi_theme() + scale_size_continuous(range = c(0.001, 2))
g1b <- g1 + geom_text(data = dd %>% filter(year == levels(year)[nlevels(year)]), aes(label = Citizenship), hjust = 1, vjust = 0, check_overlap = T, nudge_y = 0.01) +
scale_colour_manual(values = swi_rpal) + ylab("%") +
labs(title = "How many migrants leave Switzerland over time?",
subtitle = "For immigrants arrived in Switzerland in 1998, share by nationality who left the country by year of residence")
g1b + facet_wrap(~continent, ncol = 1)
pop <- data %>% filter(year == levels(year)[nlevels(year)]) %>% select(Citizenship, pop) %>% arrange(desc(pop))
pop.sub <- pop %>% head(20) %>% select(Citizenship) %>% unlist(use.names = F)
dd <- data %>% filter(Citizenship %in% pop.sub)
g1 <- ggplot(data = dd, aes(x = year, y= value, group = Citizenship, colour = continent)) +
geom_line(aes(size = pop)) + swi_theme() + scale_size_continuous(range = c(0.001, 2))
g1b <- g1 + geom_text(data = dd %>% filter(year == levels(year)[nlevels(year)]), aes(label = Citizenship), hjust = 1, vjust = 0, check_overlap = T, nudge_y = 0.01) +
scale_colour_manual(values = swi_rpal) + ylab("%") +
labs(title = "How many migrants leave Switzerland over time?",
subtitle = "For immigrants arrived in Switzerland in 1998, share by nationality who left the country by year of residence") +
theme(legend.position = "none")
g1b + facet_wrap(~continent, ncol = 1)
g1b + facet_wrap(~region)
g1b + facet_wrap(~continent, ncol = 1)
g1b + facet_wrap(~region)
dd
ddd <- dd %>% filter(region == "Western Europe")
ddd
library(highcharter)
ddd <- dd %>% filter(region == "Western Europe")
str(ddd)
hchart(
ddd, "line", hcaes(x = year, y = value)
)
hchart(
ddd, "line", hcaes(x = year, y = value, group = iso2c)
)
hchart(
ddd, "line", hcaes(x = year, y = value, group = iso2c, lineWidth = pop / 10^5)
)
g1b + facet_wrap(~region)
dd$region
dd %>% group_by(region) %>% summarise(mean = mean(value))
dd %>% group_by(region) %>% summarise(mean = mean(value)) %>% ungroup()
dd %>% group_by(region) %>% summarise(mean = mean(value)) %>% ungroup()
dd %>% group_by(region) %>% summarise(mean = mean(value)) %>% ungroup()
data.read <- read_csv(data.file) %>%
dplyr::rename( `0` = `Arrivé en 1998`, nationality = Nationalité)
datam <- as.matrix(data.read[,-1])
setwd("~/swissinfo/2017_06_27_departureRateCH")
data.read <- read_csv(data.file) %>%
dplyr::rename( `0` = `Arrivé en 1998`, nationality = Nationalité)
datam <- as.matrix(data.read[,-1])
datam
datam <- as.matrix(data.read[,-1])
datam.bak <- datam
rownames(datam) <- data.read %>% select(nationality) %>% unlist(use.names = F)
datam <- 1 - (datam / datam[,1])
datam.bak
datam %>% as.data.frame()
data.read <- read_csv(data.file) %>%
dplyr::rename( `0` = `Arrivé en 1998`, nationality = Nationalité)
datam <- as.matrix(data.read[,-1])
datam.bak <- datam
rownames(datam) <- data.read %>% select(nationality) %>% unlist(use.names = F)
datam <- 1 - (datam / datam[,1])
# data long
data <- datam %>% as.data.frame() %>%
add_column(nationality = rownames(datam), .before = 1)
data
data %<>% gather(year, value, -nationality) %>%
mutate(year = factor(year, levels = unique(year)))
data
datam.bak  %>% as.data.frame() %>%
add_column(nationality = rownames(datam), .before = 1)
data.read <- read_csv(data.file) %>%
dplyr::rename( `0` = `Arrivé en 1998`, nationality = Nationalité)
datam <- as.matrix(data.read[,-1])
datam.bak <- datam
rownames(datam) <- data.read %>% select(nationality) %>% unlist(use.names = F)
datam <- 1 - (datam / datam[,1])
# data long
data <- datam %>% as.data.frame() %>%
add_column(nationality = rownames(datam), .before = 1)
data %<>% gather(year, pc, -nationality) %>%
mutate(year = factor(year, levels = unique(year)))
data.read <- read_csv(data.file) %>%
dplyr::rename( `0` = `Arrivé en 1998`, nationality = Nationalité)
datam <- as.matrix(data.read[,-1])
datam.bak <- datam
rownames(datam) <- data.read %>% select(nationality) %>% unlist(use.names = F)
datam <- 1 - (datam / datam[,1])
# data long
data <- datam %>% as.data.frame() %>%
add_column(nationality = rownames(datam), .before = 1)
data %<>% gather(year, pc, -nationality) %>%
mutate(year = factor(year, levels = unique(year)))
datam.bak  %<>% as.data.frame() %>%
add_column(nationality = rownames(datam), .before = 1) %>%
gather(year, value, -nationality) %>%
mutate(year = factor(year, levels = unique(year)))
datam.bak
datam
data.read <- read_csv(data.file) %>%
dplyr::rename( `0` = `Arrivé en 1998`, nationality = Nationalité)
datam <- as.matrix(data.read[,-1])
datam.bak <- datam
rownames(datam) <- data.read %>% select(nationality) %>% unlist(use.names = F)
datam <- 1 - (datam / datam[,1])
# data long
data <- datam %>% as.data.frame() %>%
add_column(nationality = rownames(datam), .before = 1)
data %<>% gather(year, pc, -nationality) %>%
mutate(year = factor(year, levels = unique(year)))
datam.bak  %<>% as.data.frame() %>%
add_column(nationality = rownames(datam), .before = 1) %>%
gather(year, value, -nationality) %>%
mutate(year = factor(year, levels = unique(year)))
left_join(data, datam.bak)
data.file <- "input/nccr_departuresOverTime.csv"
processPx <- F
px.file <- "data/px-x-0102010000_104.px"
pop.file <- "input/popForeigners.csv"
library(tidyverse)
library(scales)
library(magrittr)
library(countrycode)
library(swiMap)
library(swiTheme)
library(geofacet)
require(viridis)
data.read <- read_csv(data.file) %>%
dplyr::rename( `0` = `Arrivé en 1998`, nationality = Nationalité)
datam <- as.matrix(data.read[,-1])
datam.bak <- datam
rownames(datam) <- data.read %>% select(nationality) %>% unlist(use.names = F)
datam <- 1 - (datam / datam[,1])
# data long
data <- datam %>% as.data.frame() %>%
add_column(nationality = rownames(datam), .before = 1)
data %<>% gather(year, pc, -nationality) %>%
mutate(year = factor(year, levels = unique(year)))
datam.bak  %<>% as.data.frame() %>%
add_column(nationality = rownames(datam), .before = 1) %>%
gather(year, value, -nationality) %>%
mutate(year = factor(year, levels = unique(year)))
data <- left_join(data, datam.bak)
if(processPx) {
require(pxR)
px.read <- pxR::read.px(px.file)
dd <- px.read$DATA[[1]]
# get the French terms
fr <- px.read$VALUES.fr.
en <- px.read$VALUES.en.
de <- px.read$VALUES
colnames(dd)[-ncol(dd)] <- rev(names(fr))
## helper to translate PX file
translate <- function(colname = 'Result.variable', dd, fr, de) {
# find which colname idx
i <- which(names(fr) == colname)
# split single string to a string vector
translations <- unlist(strsplit(fr[[i]], '", ?"'))
stopifnot(length(translations) == length(de[[i]]))
# match each term of the dd to the levels
idx <- match(dd[[colname]], de[[i]])
stopifnot(all(!is.na(idx)))
factor(translations[idx])
}
# apply translation
for(coln in colnames(dd)[-ncol(dd)]) {
dd[,coln]<- translate(coln, dd, fr, de)
}
dd %<>%
filter(`Lieu.de.naissance` == "Lieu de naissance - Total",
`Type.de.population` == "Population résidante permanente",
`Canton.......District........Commune.........` == "Suisse",
`Année` == levels(dd$Année)[nlevels(dd$`Année`)]) %>%
select(-`Lieu.de.naissance`, -`Type.de.population`, -`Canton.......District........Commune.........`, -`Année`)
# add also English country names
fren <- data.frame(Nationalité = unlist(strsplit(fr$Nationalité, '", ?"')), Citizenship =  unlist(strsplit(en$Citizenship, '", ?"')))
left_join(dd, fren) %>% write_csv(path = pop.file)
} else {
dd <- read_csv(pop.file) %>%
dplyr::rename( nationality = Nationalité, pop = value)
}
# merge both datasets
data %<>% left_join(dd)
stopifnot(all(!is.na(data$pop)))
# add continent information and iso2
data %<>%
mutate(iso2c = countrycode(Citizenship, "country.name", "iso2c"),
continent = countrycode(Citizenship, "country.name", "continent"),
region = countrycode(Citizenship, "country.name", "region")
) %>% select(-nationality)
pop <- data %>% filter(year == levels(year)[nlevels(year)]) %>% select(Citizenship, pop) %>% arrange(desc(pop))
pop.sub <- pop %>% head(20) %>% select(Citizenship) %>% unlist(use.names = F)
dd <- data %>% filter(Citizenship %in% pop.sub)
dd %>% group_by(region) %>% summarise(mean = mean(pc)) %>% ungroup()
g1 <- ggplot(data = dd, aes(x = year, y= value, group = Citizenship, colour = continent)) +
geom_line(aes(size = pop)) + swi_theme() + scale_size_continuous(range = c(0.001, 2))
g1b <- g1 + geom_text(data = dd %>% filter(year == levels(year)[nlevels(year)]), aes(label = Citizenship), hjust = 1, vjust = 0, check_overlap = T, nudge_y = 0.01) +
scale_colour_manual(values = swi_rpal) + ylab("%") +
labs(title = "How many migrants leave Switzerland over time?",
subtitle = "For immigrants arrived in Switzerland in 1998, share by nationality who left the country by year of residence") +
theme(legend.position = "none")
dd %>% mutate(region = reorder(region, ))
g1b + facet_wrap(~continent, ncol = 1)
g1b + facet_wrap(~region)
g1b + facet_wrap(~region)
data.file <- "input/nccr_departuresOverTime.csv"
processPx <- F
px.file <- "data/px-x-0102010000_104.px"
pop.file <- "input/popForeigners.csv"
library(tidyverse)
library(scales)
library(magrittr)
library(countrycode)
library(swiMap)
library(swiTheme)
library(geofacet)
require(viridis)
data.read <- read_csv(data.file) %>%
dplyr::rename( `0` = `Arrivé en 1998`, nationality = Nationalité)
datam <- as.matrix(data.read[,-1])
datam.bak <- datam
rownames(datam) <- data.read %>% select(nationality) %>% unlist(use.names = F)
datam <- 1 - (datam / datam[,1])
# data long
data <- datam %>% as.data.frame() %>%
add_column(nationality = rownames(datam), .before = 1)
data %<>% gather(year, pc, -nationality) %>%
mutate(year = factor(year, levels = unique(year)))
datam.bak  %<>% as.data.frame() %>%
add_column(nationality = rownames(datam), .before = 1) %>%
gather(year, value, -nationality) %>%
mutate(year = factor(year, levels = unique(year)))
data <- left_join(data, datam.bak)
if(processPx) {
require(pxR)
px.read <- pxR::read.px(px.file)
dd <- px.read$DATA[[1]]
# get the French terms
fr <- px.read$VALUES.fr.
en <- px.read$VALUES.en.
de <- px.read$VALUES
colnames(dd)[-ncol(dd)] <- rev(names(fr))
## helper to translate PX file
translate <- function(colname = 'Result.variable', dd, fr, de) {
# find which colname idx
i <- which(names(fr) == colname)
# split single string to a string vector
translations <- unlist(strsplit(fr[[i]], '", ?"'))
stopifnot(length(translations) == length(de[[i]]))
# match each term of the dd to the levels
idx <- match(dd[[colname]], de[[i]])
stopifnot(all(!is.na(idx)))
factor(translations[idx])
}
# apply translation
for(coln in colnames(dd)[-ncol(dd)]) {
dd[,coln]<- translate(coln, dd, fr, de)
}
dd %<>%
filter(`Lieu.de.naissance` == "Lieu de naissance - Total",
`Type.de.population` == "Population résidante permanente",
`Canton.......District........Commune.........` == "Suisse",
`Année` == levels(dd$Année)[nlevels(dd$`Année`)]) %>%
select(-`Lieu.de.naissance`, -`Type.de.population`, -`Canton.......District........Commune.........`, -`Année`)
# add also English country names
fren <- data.frame(Nationalité = unlist(strsplit(fr$Nationalité, '", ?"')), Citizenship =  unlist(strsplit(en$Citizenship, '", ?"')))
left_join(dd, fren) %>% write_csv(path = pop.file)
} else {
dd <- read_csv(pop.file) %>%
dplyr::rename( nationality = Nationalité, pop = value)
}
# merge both datasets
data %<>% left_join(dd)
stopifnot(all(!is.na(data$pop)))
# add continent information and iso2
data %<>%
mutate(iso2c = countrycode(Citizenship, "country.name", "iso2c"),
continent = countrycode(Citizenship, "country.name", "continent"),
region = countrycode(Citizenship, "country.name", "region")
) %>% select(-nationality)
data
g1 <- ggplot(data = dd, aes(x = year, y= pc, group = Citizenship, colour = continent)) +
geom_line(aes(size = pop)) + swi_theme() + scale_size_continuous(range = c(0.001, 2))
g1b <- g1 + geom_text(data = dd %>% filter(year == levels(year)[nlevels(year)]), aes(label = Citizenship), hjust = 1, vjust = 0, check_overlap = T, nudge_y = 0.01) +
scale_colour_manual(values = swi_rpal) + ylab("%") +
labs(title = "How many migrants leave Switzerland over time?",
subtitle = "For immigrants arrived in Switzerland in 1998, share by nationality who left the country by year of residence") +
theme(legend.position = "none")
pop <- data %>% filter(year == levels(year)[nlevels(year)]) %>% select(Citizenship, pop) %>% arrange(desc(pop))
pop.sub <- pop %>% head(20) %>% select(Citizenship) %>% unlist(use.names = F)
dd <- data %>% filter(Citizenship %in% pop.sub)
dd %>% group_by(region) %>% summarise(mean = mean(pc)) %>% ungroup()
g1 <- ggplot(data = dd, aes(x = year, y= pc, group = Citizenship, colour = continent)) +
geom_line(aes(size = pop)) + swi_theme() + scale_size_continuous(range = c(0.001, 2))
g1
str(dd)
g1b <- g1 + geom_text(data = dd %>% filter(year == levels(year)[nlevels(year)]), aes(label = Citizenship), hjust = 1, vjust = 0, check_overlap = T, nudge_y = 0.01) +
scale_colour_manual(values = swi_rpal) + ylab("%") +
labs(title = "How many migrants leave Switzerland over time?",
subtitle = "For immigrants arrived in Switzerland in 1998, share by nationality who left the country by year of residence") +
theme(legend.position = "none")
g1b
ddd <- dd %>% filter(region == "Western Europe")
hchart(
ddd, "line", hcaes(x = year, y = value, group = iso2c, lineWidth = pop / 10^5)
)
g1b + facet_wrap(~region)
dd %>% group_by(region) %>% summarise(mean = mean(pc)) %>% ungroup()
order.region <- dd %>% group_by(region) %>% summarise(meanRegion = mean(pc)) %>% ungroup()
left_join(dd, order.region) %>% mutate(region = reorder(region, meanRegion))
pop <- data %>% filter(year == levels(year)[nlevels(year)]) %>% select(Citizenship, pop) %>% arrange(desc(pop))
pop.sub <- pop %>% head(20) %>% select(Citizenship) %>% unlist(use.names = F)
dd <- data %>% filter(Citizenship %in% pop.sub)
order.region <- dd %>% group_by(region) %>% summarise(meanRegion = mean(pc)) %>% ungroup()
dd <- left_join(dd, order.region) %>% mutate(region = reorder(region, meanRegion)) %>% select(-meanRegion)
g1 <- ggplot(data = dd, aes(x = year, y= pc, group = Citizenship, colour = continent)) +
geom_line(aes(size = pop)) + swi_theme() + scale_size_continuous(range = c(0.001, 2))
g1b <- g1 + geom_text(data = dd %>% filter(year == levels(year)[nlevels(year)]), aes(label = Citizenship), hjust = 1, vjust = 0, check_overlap = T, nudge_y = 0.01) +
scale_colour_manual(values = swi_rpal) + ylab("%") +
labs(title = "How many migrants leave Switzerland over time?",
subtitle = "For immigrants arrived in Switzerland in 1998, share by nationality who left the country by year of residence") +
theme(legend.position = "none")
g1b + facet_wrap(~continent, ncol = 1)
g1b + facet_wrap(~region)
pop.sub
pop
pop <- data %>% filter(year == levels(year)[nlevels(year)]) %>% select(Citizenship, pop) %>% arrange(desc(pop))
pop.sub <- pop %>% head(1:16, 21, 25) %>% select(Citizenship) %>% unlist(use.names = F)
dd <- data %>% filter(Citizenship %in% pop.sub)
order.region <- dd %>% group_by(region) %>% summarise(meanRegion = mean(pc)) %>% ungroup()
dd <- left_join(dd, order.region) %>% mutate(region = reorder(region, meanRegion)) %>% select(-meanRegion)
g1 <- ggplot(data = dd, aes(x = year, y= pc, group = Citizenship, colour = continent)) +
geom_line(aes(size = pop)) + swi_theme() + scale_size_continuous(range = c(0.001, 2))
g1b <- g1 + geom_text(data = dd %>% filter(year == levels(year)[nlevels(year)]), aes(label = Citizenship), hjust = 1, vjust = 0, check_overlap = T, nudge_y = 0.01) +
scale_colour_manual(values = swi_rpal) + ylab("%") +
labs(title = "How many migrants leave Switzerland over time?",
subtitle = "For immigrants arrived in Switzerland in 1998, share by nationality who left the country by year of residence") +
theme(legend.position = "none")
g1b + facet_wrap(~continent, ncol = 1)
g1b + facet_wrap(~region, ncol = 2)
pop <- data %>% filter(year == levels(year)[nlevels(year)]) %>% select(Citizenship, pop) %>% arrange(desc(pop))
pop.sub <- pop %>% head(1:16, 25) %>% select(Citizenship) %>% unlist(use.names = F)
dd <- data %>% filter(Citizenship %in% pop.sub)
order.region <- dd %>% group_by(region) %>% summarise(meanRegion = mean(pc)) %>% ungroup()
dd <- left_join(dd, order.region) %>% mutate(region = reorder(region, meanRegion)) %>% select(-meanRegion)
g1 <- ggplot(data = dd, aes(x = year, y= pc, group = Citizenship, colour = continent)) +
geom_line(aes(size = pop)) + swi_theme() + scale_size_continuous(range = c(0.001, 2))
g1b <- g1 + geom_text(data = dd %>% filter(year == levels(year)[nlevels(year)]), aes(label = Citizenship), hjust = 1, vjust = 0, check_overlap = T, nudge_y = 0.01) +
scale_colour_manual(values = swi_rpal) + ylab("%") +
labs(title = "How many migrants leave Switzerland over time?",
subtitle = "For immigrants arrived in Switzerland in 1998, share by nationality who left the country by year of residence") +
theme(legend.position = "none")
g1b + facet_wrap(~continent, ncol = 1)
g1b + facet_wrap(~region, ncol = 2)
pop <- data %>% filter(year == levels(year)[1]) %>% select(Citizenship, pop) %>% arrange(desc(pop))
pop.sub <- pop %>% head(1:16, 25) %>% select(Citizenship) %>% unlist(use.names = F)
pop <- data %>% filter(year == levels(year)[1]) %>% select(Citizenship, pop) %>% arrange(desc(pop))
pop.sub <- pop %>% head(1:16, 25) %>% select(Citizenship) %>% unlist(use.names = F)
pop <- data %>% filter(year == levels(year)[1]) %>% select(Citizenship, pop) %>% arrange(desc(pop))
pop.sub <- pop %>% slice(c(1:16, 25)) %>% select(Citizenship) %>% unlist(use.names = F)
dd <- data %>% filter(Citizenship %in% pop.sub)
order.region <- dd %>% group_by(region) %>% summarise(meanRegion = mean(pc)) %>% ungroup()
dd <- left_join(dd, order.region) %>% mutate(region = reorder(region, meanRegion)) %>% select(-meanRegion)
g1 <- ggplot(data = dd, aes(x = year, y= pc, group = Citizenship, colour = continent)) +
geom_line(aes(size = pop)) + swi_theme() + scale_size_continuous(range = c(0.001, 2))
g1b <- g1 + geom_text(data = dd %>% filter(year == levels(year)[nlevels(year)]), aes(label = Citizenship), hjust = 1, vjust = 0, check_overlap = T, nudge_y = 0.01) +
scale_colour_manual(values = swi_rpal) + ylab("%") +
labs(title = "How many migrants leave Switzerland over time?",
subtitle = "For immigrants arrived in Switzerland in 1998, share by nationality who left the country by year of residence") +
theme(legend.position = "none")
g1b + facet_wrap(~continent, ncol = 1)
g1b + facet_wrap(~region, ncol = 2)
g1b
pop.sub
dd <- data %>% filter(Citizenship %in% pop.sub)
order.region <- dd %>% group_by(region) %>% summarise(meanRegion = mean(pc)) %>% ungroup()
dd <- left_join(dd, order.region) %>% mutate(region = reorder(region, meanRegion)) %>% select(-meanRegion)
g1 <- ggplot(data = dd, aes(x = year, y= pc, group = Citizenship, colour = continent)) +
geom_line(aes(size = pop)) + swi_theme() + scale_size_continuous(range = c(0.001, 2))
g1b <- g1 + geom_text(data = dd %>% filter(year == levels(year)[nlevels(year)]), aes(label = Citizenship), hjust = 1, vjust = 0, check_overlap = T, nudge_y = 0.01) +
scale_colour_manual(values = swi_rpal) + ylab("%") +
labs(title = "How many migrants leave Switzerland over time?",
subtitle = "For immigrants arrived in Switzerland in 1998, share by nationality who left the country by year of residence") +
theme(legend.position = "none")
g1b
g1b + facet_wrap(~continent, ncol = 1)
g1b + facet_wrap(~iso2c)
pop <- data %>% filter(year == levels(year)[1]) %>% select(Citizenship, pop) %>% arrange(desc(pop))
pop.sub <- pop %>% slice(c(1:16, 25)) %>% select(Citizenship) %>% unlist(use.names = F)
dd <- data %>% filter(Citizenship %in% pop.sub)
order.region <- dd %>% group_by(region) %>% summarise(meanRegion = mean(pc)) %>% ungroup()
dd <- left_join(dd, order.region) %>% mutate(region = reorder(region, meanRegion)) %>% select(-meanRegion)
order.country <- dd %>% group_by(iso2c) %>% summarise(meanIso= mean(pc)) %>% ungroup()
dd <- left_join(dd, order.country) %>% mutate(iso2c = reorder(iso2c, meanIso)) %>% select(-meanIso)
g1 <- ggplot(data = dd, aes(x = year, y= pc, group = Citizenship, colour = continent)) +
geom_line(aes(size = pop)) + swi_theme() + scale_size_continuous(range = c(0.001, 2))
g1b <- g1 + geom_text(data = dd %>% filter(year == levels(year)[nlevels(year)]), aes(label = Citizenship), hjust = 1, vjust = 0, check_overlap = T, nudge_y = 0.01) +
scale_colour_manual(values = swi_rpal) + ylab("%") +
labs(title = "How many migrants leave Switzerland over time?",
subtitle = "For immigrants arrived in Switzerland in 1998, share by nationality who left the country by year of residence") +
theme(legend.position = "none")
g1b + facet_wrap(~iso2c)
